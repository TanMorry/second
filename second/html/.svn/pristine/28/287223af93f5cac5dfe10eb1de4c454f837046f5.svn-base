/*省级的数据，目前定死，也可以用Ajax送数据库调用一次*/var LAreaData = [{"id":"1","name":"\u5317\u4eac\u5e02","child":"[{}]"},{"id":"2","name":"\u5929\u6d25\u5e02","child":"[{}]"},{"id":"3","name":"\u6cb3\u5317\u7701","child":"[{}]"},{"id":"4","name":"\u5c71\u897f\u7701","child":"[{}]"},{"id":"5","name":"\u5185\u8499\u53e4\u81ea\u6cbb\u533a","child":"[{}]"},{"id":"6","name":"\u8fbd\u5b81\u7701","child":"[{}]"},{"id":"7","name":"\u5409\u6797\u7701","child":"[{}]"},{"id":"8","name":"\u9ed1\u9f99\u6c5f\u7701","child":"[{}]"},{"id":"9","name":"\u4e0a\u6d77\u5e02","child":"[{}]"},{"id":"10","name":"\u6c5f\u82cf\u7701","child":"[{}]"},{"id":"11","name":"\u6d59\u6c5f\u7701","child":"[{}]"},{"id":"12","name":"\u5b89\u5fbd\u7701","child":"[{}]"},{"id":"13","name":"\u798f\u5efa\u7701","child":"[{}]"},{"id":"14","name":"\u6c5f\u897f\u7701","child":"[{}]"},{"id":"15","name":"\u5c71\u4e1c\u7701","child":"[{}]"},{"id":"16","name":"\u6cb3\u5357\u7701","child":"[{}]"},{"id":"17","name":"\u6e56\u5317\u7701","child":"[{}]"},{"id":"18","name":"\u6e56\u5357\u7701","child":"[{}]"},{"id":"19","name":"\u5e7f\u4e1c\u7701","child":"[{}]"},{"id":"20","name":"\u5e7f\u897f\u58ee\u65cf\u81ea\u6cbb\u533a","child":"[{}]"},{"id":"21","name":"\u6d77\u5357\u7701","child":"[{}]"},{"id":"22","name":"\u91cd\u5e86\u5e02","child":"[{}]"},{"id":"23","name":"\u56db\u5ddd\u7701","child":"[{}]"},{"id":"24","name":"\u8d35\u5dde\u7701","child":"[{}]"},{"id":"25","name":"\u4e91\u5357\u7701","child":"[{}]"},{"id":"26","name":"\u897f\u85cf\u81ea\u6cbb\u533a","child":"[{}]"},{"id":"27","name":"\u9655\u897f\u7701","child":"[{}]"},{"id":"28","name":"\u7518\u8083\u7701","child":"[{}]"},{"id":"29","name":"\u9752\u6d77\u7701","child":"[{}]"},{"id":"30","name":"\u5b81\u590f\u56de\u65cf\u81ea\u6cbb\u533a","child":"[{}]"},{"id":"31","name":"\u65b0\u7586\u7ef4\u543e\u5c14\u81ea\u6cbb\u533a","child":"[{}]"},{"id":"32","name":"\u53f0\u6e7e\u7701","child":"[{}]"},{"id":"33","name":"\u9999\u6e2f\u7279\u522b\u884c\u653f\u533a","child":"[{}]"},{"id":"34","name":"\u6fb3\u95e8\u7279\u522b\u884c\u653f\u533a","child":"[{}]"},{"id":"35","name":"\u6d77\u5916","child":"[{}]"},{"id":"36","name":"\u5176\u4ed6","child":"[{}]"}];var saveArea = LAreaData;var saveData = [{"id":"1","name":"\u5317\u4eac\u5e02","child":"[{}]"},{"id":"2","name":"\u5929\u6d25\u5e02","child":"[{}]"}];/*用来判定是否满足需要请求的变量*/var isTurn;/*用来绑定请求次数的变量*/var cycle = true;//var pcaId = [];

//pcaId = [1,38,578];
window.LArea = (function() {    var MobileArea = function() {        this.gearArea;        this.data;        this.index = 0;        this.value = [0, 0, 0];                this.pcaId = [];    }    MobileArea.prototype = {        init: function(params) {            this.params = params;            this.trigger = document.querySelector(params.trigger);            if(params.valueTo){              this.valueTo=document.querySelector(params.valueTo);            }                        this.pcaId = params.pcaId || [];            this.keys = params.keys;            this.type = params.type||1;            switch (this.type) {                case 1:                case 2:                    break;                default:                    throw new Error('错误提示: 没有这种数据源类型');                    break;            }            this.bindEvent();        },        getData: function(callback) {            var _self = this;            if (typeof _self.params.data == "object") {                _self.data = _self.params.data;                callback();            } else {                var xhr = new XMLHttpRequest();                xhr.open('get', _self.params.data);                xhr.onload = function(e) {                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 0) {                        var responseData = JSON.parse(xhr.responseText);                        _self.data = responseData.data;                        if (callback) {                            callback()                        };                    }                }                xhr.send();            }        },        bindEvent: function() {            var _self = this;            //呼出插件            function popupArea(e) {                _self.gearArea = document.createElement("div");                _self.gearArea.className = "gearArea";                _self.gearArea.innerHTML = '<div class="area_ctrl slideInUp">' +                    '<div class="area_btn_box">' +                    '<div class="area_btn larea_cancel">取消</div>' +                    '<div class="area_btn larea_finish">确定</div>' +                    '</div>' +                    '<div class="area_roll_mask">' +                    '<div class="area_roll">' +                    '<div>' +                    '<div class="gear area_province" data-areatype="area_province"></div>' +                    '<div class="area_grid">' +                    '</div>' +                    '</div>' +                    '<div>' +                    '<div class="gear area_city" data-areatype="area_city"></div>' +                    '<div class="area_grid">' +                    '</div>' +                    '</div>' +                    '<div>' +                    '<div class="gear area_county" data-areatype="area_county"></div>' +                    '<div class="area_grid">' +                    '</div>' +                    '</div>' +                    '</div>' +                    '</div>' +                    '</div>';                document.body.appendChild(_self.gearArea);                areaCtrlInit();                var larea_cancel = _self.gearArea.querySelector(".larea_cancel");                larea_cancel.addEventListener('touchstart', function(e) {                    _self.close(e);                });                var larea_finish = _self.gearArea.querySelector(".larea_finish");                larea_finish.addEventListener('touchstart', function(e) {                    _self.finish(e);                });                var area_province = _self.gearArea.querySelector(".area_province");                var area_city = _self.gearArea.querySelector(".area_city");                var area_county = _self.gearArea.querySelector(".area_county");                area_province.addEventListener('touchstart', gearTouchStart);                area_city.addEventListener('touchstart', gearTouchStart);                area_county.addEventListener('touchstart', gearTouchStart);                area_province.addEventListener('touchmove', gearTouchMove);                area_city.addEventListener('touchmove', gearTouchMove);                area_county.addEventListener('touchmove', gearTouchMove);                area_province.addEventListener('touchend', gearTouchEnd);                area_city.addEventListener('touchend', gearTouchEnd);                area_county.addEventListener('touchend', gearTouchEnd);            }            //初始化插件默认值            function areaCtrlInit() {                _self.gearArea.querySelector(".area_province").setAttribute("val", _self.value[0]);                _self.gearArea.querySelector(".area_city").setAttribute("val", _self.value[1]);                _self.gearArea.querySelector(".area_county").setAttribute("val", _self.value[2]);                switch (_self.type) {                    case 1:						//						$.ajax({
//				            url:"http://127.0.0.1/tongrenmiao/?g=mall&m=index&a=getAreaData",
//				            data:{'type':'0'},
//				            dataType:'json',
//				            type:'get',
//				            success:function(data)
//				            {
//				            	console.log('初始化');
//				            	//console.log("init-----------"+JSON.stringify(data));
//                      		_self.setGearTooth(data);
//				            	
//				            },
//				            error:function(data)
//				            {
//				            	//console.log(data);
//				            	//console.log("init-----------"+JSON.stringify(data));
//				            	console.log(data['responseText']);
//				            	//_self.setGearTooth(eval(data['responseText']));
//				            }
//				        });						_self.setGearTooth(LAreaData);												_self.pcaId = [];                                                break;                    case 2:                    	$.ajax({
				            url:"http://127.0.0.1/tongrenmiao/?g=mall&m=index&a=getAreaData",
				            data:{'type':'0'},
				            dataType:'jsonp',
				            type:'get',
				            success:function(data)
				            {
				            	console.log("init-----------"+JSON.stringify(data));
                        		_self.setGearTooth(_self.data[0]);
				            	
				            }
				        });						                        break;                }            }            //触摸开始            function gearTouchStart(e) {                e.preventDefault();                var target = e.target;                while (true) {                    if (!target.classList.contains("gear")) {                        target = target.parentElement;                    } else {                        break                    }                }                clearInterval(target["int_" + target.id]);                target["old_" + target.id] = e.targetTouches[0].screenY;                target["o_t_" + target.id] = (new Date()).getTime();                var top = target.getAttribute('top');                if (top) {                    target["o_d_" + target.id] = parseFloat(top.replace(/em/g, ""));                } else {                    target["o_d_" + target.id] = 0;                }                target.style.webkitTransitionDuration = target.style.transitionDuration = '0ms';            }            //手指移动            function gearTouchMove(e) {                e.preventDefault();                var target = e.target;                while (true) {                    if (!target.classList.contains("gear")) {                        target = target.parentElement;                    } else {                        break                    }                }                target["new_" + target.id] = e.targetTouches[0].screenY;                target["n_t_" + target.id] = (new Date()).getTime();                var f = (target["new_" + target.id] - target["old_" + target.id]) * 9 / window.innerHeight;                target["pos_" + target.id] = target["o_d_" + target.id] + f;                target.style["-webkit-transform"] = 'translate3d(0,' + target["pos_" + target.id] + 'em,0)';                target.setAttribute('top', target["pos_" + target.id] + 'em');                if(e.targetTouches[0].screenY<1){                    gearTouchEnd(e);                };            }            //离开屏幕            function gearTouchEnd(e) {                e.preventDefault();                var target = e.target;                while (true) {                    if (!target.classList.contains("gear")) {                        target = target.parentElement;                    } else {                        break;                    }                }                var flag = (target["new_" + target.id] - target["old_" + target.id]) / (target["n_t_" + target.id] - target["o_t_" + target.id]);                if (Math.abs(flag) <= 0.2) {                    target["spd_" + target.id] = (flag < 0 ? -0.08 : 0.08);                } else {                    if (Math.abs(flag) <= 0.5) {                        target["spd_" + target.id] = (flag < 0 ? -0.16 : 0.16);                    } else {                        target["spd_" + target.id] = flag / 2;                    }                }                if (!target["pos_" + target.id]) {                    target["pos_" + target.id] = 0;                }                rollGear(target);            }            //缓动效果            function rollGear(target) {                var d = 0;                var stopGear = false;                function setDuration() {                    target.style.webkitTransitionDuration = target.style.transitionDuration = '500ms';                    stopGear = true;                }                clearInterval(target["int_" + target.id]);                target["int_" + target.id] = setInterval(function() {                    var pos = target["pos_" + target.id];                    var speed = target["spd_" + target.id] * Math.exp(-0.03 * d);                    pos += speed;                    if (Math.abs(speed) > 0.1) {} else {                        var b = Math.round(pos / 2) * 2;                        pos = b;                        setDuration();                    }                    if (pos > 0) {                        pos = 0;                        setDuration();                    }                    var minTop = -(target.dataset.len - 1) * 2;                    if (pos < minTop) {                        pos = minTop;                        setDuration();                    }                    if (stopGear) {                        var gearVal = Math.abs(pos) / 2;                        setGear(target, gearVal);                        clearInterval(target["int_" + target.id]);                    }                    target["pos_" + target.id] = pos;                    target.style["-webkit-transform"] = 'translate3d(0,' + pos + 'em,0)';                    target.setAttribute('top', pos + 'em');                    d++;                }, 30);            }            //控制插件滚动后停留的值            function setGear(target, val) {            	            	cycle = true;                val = Math.round(val);                target.setAttribute("val", val);                switch (_self.type) {                    case 1:                         _self.setGearTooth(_self.data);                        break;                    case 2:                     switch(target.dataset['areatype']){                         case 'area_province':                         _self.setGearTooth(_self.data[0]);                                                  console.log(2);                                                  console.log(_self.data[0]);                             break;                         case 'area_city':                             var ref = target.childNodes[val].getAttribute('ref');                             var childData=[];                             var nextData= _self.data[2];                             for (var i in nextData) {                                 if(i==ref){                                    childData = nextData[i];                                    break;                                 }                             };                        _self.index=2;                        _self.setGearTooth(childData);                             break;                     }                }                            }            _self.getData(function() {                _self.trigger.addEventListener('click', popupArea);            });        },        //重置节点个数        setGearTooth: function(data) {            var _self = this;            var item = data || [];            var l = item.length;            var gearChild = _self.gearArea.querySelectorAll(".gear");            var gearVal = gearChild[_self.index].getAttribute('val');            gearVal = isNaN(gearVal) ? 0 : gearVal;            var maxVal = l - 1;            if (gearVal > maxVal) {                gearVal = maxVal;            }            gearChild[_self.index].setAttribute('data-len', l);            if (l > 0) {								if( _self.pcaId == "" ){					var id = item[gearVal][this.keys['id']];				}				else{					var id = _self.pcaId[_self.index];					for (var i = 0; i < l; i++) {						if( item[i][this.keys['id']] == id ){							gearVal = i;						}					};//					console.log(gearVal);				}				                                var childData;				                switch (_self.type) {                    case 1://                  childData = item[gearVal].child;//					childData = LAreaData;                                            break;                    case 2:                     var nextData= _self.data[_self.index+1]                      for (var i in nextData) {                         if(i==id){                            childData = nextData[i];                            break;                         }                     };                        break;                }                isTurn = true;                for( i =0 ; i < saveData.length ; i++ ){                	if( saveData[i] == id )                		isTurn = false;                }//              console.log(isTurn);
//              console.log( JSON.stringify(saveData) );				if(cycle){	                if( isTurn ){	              	  	getChildData();	                }	                else{	                	for( i = 0 ; i < saveArea.length ; i++ ){	                		var canBreak = false;	                		if( saveArea[i].id == id ){	                			childData = saveArea[i].child;	                			break;	                		}	                		for( j = 0 ; j < saveArea[i].child.length ; j++ ){	                			if( saveArea[i].child[j].id == id ){	                				childData = saveArea[i].child[j].child;	                				canBreak = true;	                				break;	                			}	                		}	                		if(canBreak)	                			break;	                	}	                }	            }                var itemStr = "";                for (var i = 0; i < l; i++) {                    itemStr += "<div class='tooth'  ref='" + item[i][this.keys['id']] + "'>" + item[i][this.keys['name']] + "</div>";                }                gearChild[_self.index].innerHTML = itemStr;                gearChild[_self.index].style["-webkit-transform"] = 'translate3d(0,' + (-gearVal * 2) + 'em,0)';                gearChild[_self.index].setAttribute('top', -gearVal * 2 + 'em');                gearChild[_self.index].setAttribute('val', gearVal);                _self.index++;                                if (_self.index > 1) {                    cycle = false;                }                if (_self.index > 2) {                    _self.index = 0;                    return;                }                _self.setGearTooth(childData);            } else {                gearChild[_self.index].innerHTML = "<div class='tooth'></div>";                gearChild[_self.index].setAttribute('val', 0);                if(_self.index==1){                    gearChild[2].innerHTML = "<div class='tooth'></div>";                    gearChild[2].setAttribute('val', 0);                }                _self.index = 0;            }                        function getChildData(){            	var url = "/tongrenmiao/index.php?g=Mall&m=index&a=getAreaData";            	$.ajax({		            url:url,		            data:{'type':'0','id':id},		            dataType:'json',		            type:'get',		            async:false,		            beforeSend:function()		            {				            },		            success:function(ret)		            {		            	childData = ret;		            	saveData.push( id );		            	//		            	for( i = 0 ; i < ret.length ; i++){
//		            		saveArea.push( ret[i] );
//		            	}		            	for( i = 0 ; i < saveArea.length ; i++ ){		            		var canBreak = false;
		            		if( saveArea[i].id == id ){		            			saveArea[i].child = [];		            			for( k = 0 ; k < ret.length ; k++ ){		            				saveArea[i].child.push( ret[k] );		            			}
		            			break;
		            		}
		            		for( j = 0 ; j < saveArea[i].child.length ; j++ ){
		            			if( saveArea[i].child[j].id == id ){		            				saveArea[i].child[j].child = [];
		            				for( k = 0 ; k < ret.length ; k++ ){			            				saveArea[i].child[j].child.push( ret[k] );			            			}		            				canBreak = true;		            				break;
		            			}
		            		}		            		if(canBreak)		            			break;
		            	}
//						console.log(saveArea);//		            	console.log(JSON.stringify(saveArea));//		            	console.log( saveArea[0].child[0].child );	            	}		        })		    };        },        finish: function(e) {            var _self = this;            var area_province = _self.gearArea.querySelector(".area_province");            var area_city = _self.gearArea.querySelector(".area_city");            var area_county = _self.gearArea.querySelector(".area_county");            var provinceVal = parseInt(area_province.getAttribute("val"));            var provinceText = area_province.childNodes[provinceVal].textContent;            var provinceCode = area_province.childNodes[provinceVal].getAttribute('ref');            var cityVal = parseInt(area_city.getAttribute("val"));            var cityText = area_city.childNodes[cityVal].textContent;            var cityCode = area_city.childNodes[cityVal].getAttribute('ref');            var countyVal = parseInt(area_county.getAttribute("val"));            var countyText = area_county.childNodes[countyVal].textContent;            var countyCode = area_county.childNodes[countyVal].getAttribute('ref');            _self.trigger.value = provinceText + ((cityText)?(' ' + cityText):(''))+ ((countyText)?(' ' + countyText):(''));            _self.value = [provinceVal, cityVal, countyVal];            if(this.valueTo){                this.valueTo.value= provinceCode +((cityCode)?(' ' + cityCode):('')) + ((countyCode)?(' ' + countyCode):(''));            }            _self.close(e);                        cycle = true;        },        close: function(e) {            e.preventDefault();            var _self = this;            var evt = new CustomEvent('input');            _self.trigger.dispatchEvent(evt);            document.body.removeChild(_self.gearArea);                        cycle = true;        }    }    return MobileArea;})()